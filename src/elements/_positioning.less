// Positioning with Arrows (tooltitps, popovers, etc.)

@import 'vars';

// Distance from tip to nearest tooltip corner
@arrow-offset: 1.25rem; // 20px

// length of one side of the square arrow container
// 13px chosen because the hypotenuse calculates closest to 16px (per spec)
@arrow-short-side: 13px;

// Calculate long side (i.e., the hypotenuse of the arrow container)
@arrow-long-side: sqrt(2 * pow(@arrow-short-side, 2)); // 18.385px

// Calculate height of arrow from base to tip
// floor(9.1925) => 9px
@arrow-height: floor(@arrow-long-side / 2);

// Calculate inward distance for positioning
// subtract 1px due to imperfect rounding
@arrow-margin: @arrow-height - 1;

@border-color: @gray-300;
@border-width: 1px;

/* MIXINS */
#Arrow {
  .children(@rules) {
    &::before,
    &::after {
      @rules();
    }
  }

  .shadow(@rules) {
    &::before {
      // Always add "border" shadow
      // NOTE: Use "box-shadow+: ..." (note the +) to add additional shadows
      box-shadow+: 0 0 0 1px @gray-300;

      @rules();
    }
  }

  .body(@rules) {
    &::after {
      @rules();
    }
  }

  .rotate(@deg: 0deg; @from: center;) {
    .children({
      transform-origin: @from;
      transform: rotate(@deg);
    });
  }
}//#Arrow

.has-arrow {
  @right-shadow: 3px 3px 3px 0 @shadow-color;
  @left-shadow: -3px 3px 3px 0 @shadow-color;
  @border-shadow: 0 0 0 @border-width @border-color;

  position: relative;

  #Arrow.shadow({
    z-index: -1;
  });

  #Arrow.children({
    content: '';
    display: block;
    height: @arrow-short-side;
    position: absolute;
    width: @arrow-short-side;
  });

  /*======================================== *\
   * TOP POSITIONS
  \*======================================== */
  &[position^="top"] {
    margin-bottom: @arrow-margin;

    #Arrow.children({
      bottom: -(@arrow-margin);
    });

    #Arrow.body({
      background-image: linear-gradient(
        to bottom left,
        transparent 50%,
        @gray-0 50%
      );
    });
  }

  &[position="top"] {
    #Arrow.children({
      left: 50%; // offset, tip centered
    });
    #Arrow.shadow({
      box-shadow+: @left-shadow;
    });
    #Arrow.rotate(-45deg, bottom left);
  }

  &[position="top-right"] {
    #Arrow.children({
      left: @arrow-offset;
    });
    #Arrow.shadow({
      box-shadow+: @left-shadow;
    });
    #Arrow.rotate(-45deg, bottom left);
  }

  &[position="top-left"] {
    #Arrow.children({
      right: @arrow-offset;
    });
    #Arrow.body({
      background-image: linear-gradient(
        to bottom right,
        transparent 50%,
        @gray-0 50%
      );
    });
    #Arrow.shadow({
      box-shadow+: @right-shadow;
    });
    #Arrow.rotate(45deg, bottom right);
  }

  /*======================================== *\
   * RIGHT POSITIONS
  \*======================================== */
  &[position^="right"] {
    margin-left: @arrow-margin;

    #Arrow.children({
      left: -(@arrow-margin);
    });

    #Arrow.body({
      background-image: linear-gradient(
        to top left,
        transparent 50%,
        @gray-0 50%
      );
    });
  }

  &[position="right"] {
    #Arrow.children({
      top: 50%; // offset, tip centered
    });
    #Arrow.shadow({
      box-shadow+: @left-shadow;
    });
    #Arrow.rotate(-45deg, top left);
  }

  &[position="right-bottom"] {
    #Arrow.children({
      top: @arrow-offset;
    });
    #Arrow.shadow({
      box-shadow+: @left-shadow;
    });
    #Arrow.rotate(-45deg, top left);
  }

  &[position="right-top"] {
    #Arrow.children({
      bottom: @arrow-offset;
    });
    #Arrow.body({
      background-image: linear-gradient(
        to bottom left,
        transparent 50%,
        @gray-0 50%
      );
    });
    #Arrow.shadow({
      box-shadow+: @right-shadow;
    });
    #Arrow.rotate(45deg, bottom left);
  }

  /*======================================== *\
   * BOTTOM POSITIONS
  \*======================================== */
  &[position^="bottom"] {
    margin-top: @arrow-margin;

    #Arrow.children({
      top: -(@arrow-margin);
    });

    #Arrow.body({
      background-image: linear-gradient(
        to top left,
        transparent 50%,
        @gray-0 50%
      );
    });
  }

  &[position="bottom"] {
    #Arrow.children({
      left: 50%; // offset, tip centered
    });
    #Arrow.rotate(45deg, top left);
  }

  &[position="bottom-right"] {
    #Arrow.children({
      left: @arrow-offset;
    });
    #Arrow.rotate(45deg, top left);
  }

  &[position="bottom-left"] {
    #Arrow.children({
      right: @arrow-offset;
    });
    #Arrow.body({
      background-image: linear-gradient(
        to top right,
        transparent 50%,
        @gray-0 50%
      );
    });
    #Arrow.rotate(-45deg, top right);
  }

  /*======================================== *\
   * LEFT POSITIONS
  \*======================================== */
  &[position^="left"] {
    margin-right: @arrow-margin;

    #Arrow.children({
      right: -(@arrow-margin);
    });

    #Arrow.body({
      background-image: linear-gradient(
        to top right,
        transparent 50%,
        @gray-0 50%
      );
    });
  }

  &[position="left"] {
    #Arrow.children({
      top: 50%; // offset, tip centered
    });
    #Arrow.shadow({
      box-shadow+: @right-shadow;
    });
    #Arrow.rotate(45deg, top right);
  }

  &[position="left-bottom"] {
    #Arrow.children({
      top: @arrow-offset;
    });
    #Arrow.shadow({
      box-shadow+: @right-shadow;
    });
    #Arrow.rotate(45deg, top right);
  }

  &[position="left-top"] {
    #Arrow.children({
      bottom: @arrow-offset;
    });
    #Arrow.body({
      background-image: linear-gradient(
        to bottom right,
        transparent 50%,
        @gray-0 50%
      );
    });
    #Arrow.shadow({
      box-shadow+: @left-shadow;
    });
    #Arrow.rotate(-45deg, bottom right);
  }
}
